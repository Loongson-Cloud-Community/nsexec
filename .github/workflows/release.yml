on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: |
          DOCKER_BUILDKIT=1 docker build --build-arg HTTP_PROXY=${HTTP_PROXY} --build-arg HTTPS_PROXY=${HTTPS_PROXY} . -t chaos-mesh/nsexec
          docker run -v ${PWD}:/opt/mount:z --rm --entrypoint cp chaos-mesh/nsexec /nsexec /opt/mount/nsexec
          docker run -v ${PWD}:/opt/mount:z --rm --entrypoint cp chaos-mesh/libnsenter.so /nsexec /opt/mount/libnsenter.so
          tar -czvf ./nsexec.tar.gz ./libnsenter.so ./nsexec
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./nsexec.tar.gz
          asset_name: nsexec-linux-amd64.tar.gz
          asset_content_type: application/zip